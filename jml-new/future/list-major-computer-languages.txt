Possible for JML to possibly port to:
java
python
kotlin
C++
C#
C
Rust
Ruby
AngelScript
Perl //before version 6 will have to directly edit source code in order to modify the class
Pascal?
Fortran?

Portable Assembly Languages (P-code, Bytecode, Intermediate representation):
bytecode(java)
LLVM
LLVM bytecode
LLVM bitcode
.NET bytecode
p-code
Parrot bytecode (PERL)
Microsoft P-Code
Pascal p-code
OpenCL
SPIR
android ART
android Dalvik
CIL
C--

assembly and cpu architectures supported:
x86(windows xp - windows 10, linux)
x64(windows xp+, android, linux)
arm32(android, linux)
arm64(windows 11, android, linux)
Zen
Zen+
Zen 2(AMD, xbox one x, ps5, windows 10+)
Zen 3
#theory; convert them into bytecode or something similar and then compile them back when done

jredfox's native image & cpu dissembler:
- dissassemble all supported cpu architectures
- support dissassembling native os images and formats
- decompiles to c++ or c# possible as an option
- recompiles to same or different architecture when avalible without the need to use c++ or c#

Maybe supported:
swift
SIL(swift asm)
xcode
mysql

usefull compilers:
graalvm

Not Supported:
scala
java script
PHP
Delphi
PL-SOL

cpu architecture not supported:
x86_x64 (problems with both the amd64 and intel64 versions that seems to have never gotten resolved)
Intel64

supported if help arrives:
MIPS
SPARC
Power ISA
IA-32(servers)
IA-64(servers)
xeon processors architecture(https://en.wikipedia.org/wiki/List_of_Intel_CPU_microarchitectures)

